openapi: 3.0.0
info:
  title: Sample API
  description: API for simple HTTP server that visualize machine learning process
  version: 0.0.1

components:
    schemas:
      Config:
        type: object
        properties:
            name:
              type: string
        additionalProperties: true
        required:
          - name

      Images:
        type: array
        description: Array with indicies of images
        items:
          type: integer

      Labels:
        type: array
        description: Array with labels, supported formats are one-hot,
          label number or string
        items:
          oneOf:
              - type: integer
              - type: string
              - type: array

      LabelledImages:
        type: object
        properties:
            images:
              $ref: '#/components/schemas/Images'
            labels:
              $ref: '#/components/schemas/Labels'
        required:
            - images
            - labels

paths:
  /home:
    get:
      summary: Home page
      tags:
        - main
      responses:
        200:
          description: OK
          content:
              text/html:
                schema:
                  type: string

    post:
      summary: Test endpoint
      tags:
        - main
      requestBody:
        content:
          application/json:
            schema:
              type: object

      responses:
        200:
          description: OK
          content:
              text/html:
                schema:
                  type: string

  /configs/:
    get:
      summary: Returns all possible configuration
      tags:
          - extras
      responses: 
        '200':
          description: List of configurations
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/Config'
        '404':
          description: Configuration not found

  /configs/{name}:
    get:
      summary: Returns configuration with specified name
      tags:
          - extras
      parameters:
          - in: path
            name: name
            description: Name of the configuration to be returned
            schema:
              type: string
              example: cats_vs_dogs64
            required: true

      responses: 
        '200':
          description: Configuration
          content:
            application/json:
              schema: 
                type: object
                items: 
                  $ref: '#/components/schemas/Config'
        '404':
          description: Configuration with specified name not found

  /images:
    post:
      summary: Post labels annoted by the user.
      tags:
          - data
      requestBody:
        description: Two lists, first of them contains indicies of train images
          and the second one contains corresponding labels.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelledImages'
      responses:
          '200':
            description: Images with labels added to train dataset

    get:
      summary: Show training images
      tags:
          - data
      parameters:
          - in: query
            name: labels
            description: Set to True if you want to show images with labels
            schema:
              type: boolean
          - in: query
            name: random
            description: If true, show random images
            schema:
              type: boolean
          - in: query
            name: maxImages
            description: Number of images to show
            schema:
              type: integer
            # required: True
      # requestBody:
      #   description: Indicies of images to show, if it is specified then 
      #     random parameter should be set to False.
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           indicies:
      #             type: array
      #             items:
      #               type: integer

      responses:
          '200':
            description: Return desired number of indicies
            content:
              text/html:
                schema:
                  type: string


        



  
        


      
